{"version":3,"sources":["data.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","connect","state","reducer","alertState","reducer2","props","className","Table","striped","bordered","hover","size","map","e","name","quan","onClick","dispatch","type","index","Button","Detail","lazy","Card","history","useHistory","push","data","src","alt","width","App","useState","Data","shoes","shoes변경","재고","재고변경","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","NavDropdown","Item","href","Divider","exact","path","Jumbotron","variant","a","i","axios","get","then","result","catch","console","log","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","기본값","store","createStore","combineReducers","액션","find","findIndex","payload","복사본","findApple","arrIndex","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c100d2e4.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id: 0,\r\n    title: \"White and Black\",\r\n    content: \"Born in France\",\r\n    price: 120000,\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Red Knit\",\r\n    content: \"Born in Seoul\",\r\n    price: 110000,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Grey Yordan\",\r\n    content: \"Born in the States\",\r\n    price: 130000,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Button, Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Cart(props) {\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <Table striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>변경</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.state.map((e) => {\r\n            return (\r\n              <tr key={e.id}>\r\n                <td>{e.id}</td>\r\n                <td>{e.name}</td>\r\n                <td>{e.quan}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => {\r\n                      props.dispatch({ type: \"수량증가\", index: e.id });\r\n                    }}\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      props.dispatch({ type: \"수량감소\", index: e.id });\r\n                    }}\r\n                  >\r\n                    -\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {props.alertState === true ? (\r\n        <div className=\"my-alert2\">\r\n          <p>신상품 전품목 20% 할인!!</p>\r\n          <div className=\"mt-2\">\r\n            <Button\r\n              className=\"primary\"\r\n              onClick={() => {\r\n                props.dispatch({ type: false });\r\n              }}\r\n            >\r\n              닫기\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction state를props화(state) {\r\n  return {\r\n    state: state.reducer,\r\n    alertState: state.reducer2,\r\n  };\r\n}\r\n\r\nexport default connect(state를props화)(Cart);\r\n// export default Cart;\r\n","import { useState, lazy, Suspense } from \"react\";\nimport \"./App.css\";\nimport { Navbar, Nav, NavDropdown, Jumbotron, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Data from \"./data\";\nimport Cart from \"./Cart\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\n\n// import Detail from \"./Detail\";\nconst Detail = lazy(() => import(\"./Detail\"));\n\nfunction App() {\n  const [shoes, shoes변경] = useState(Data);\n  const [재고, 재고변경] = useState([5, 10, 15]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand as={Link} to=\"/\">\n          Shoes Shop\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">\n              Home\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/detail/0\">\n              Detail\n            </Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season Off</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for\n              calling extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n          <div className=\"container\">\n            <div className=\"row\">\n              {shoes.map((a, i) => {\n                return <Card data={a} index={i} key={a.id} />;\n              })}\n            </div>\n            <div className=\"append\"></div>\n\n            <div>\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  axios\n                    .get(\"https://codingapple1.github.io/shop/data2.json\")\n                    .then((result) => {\n                      shoes변경([...shoes, ...result.data]);\n                    })\n                    .catch(() => {\n                      console.log(\"실패\");\n                    });\n                }}\n              >\n                더보기\n              </button>\n            </div>\n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <Suspense fallback={<div>로딩중...</div>}>\n            <Detail shoes={shoes} 재고={재고} 재고변경={재고변경} />\n          </Suspense>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n        <Route path=\"/:id\">아무거나 적었다!!!</Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Card(props) {\n  const history = useHistory();\n\n  return (\n    <div\n      className=\"col-md-4 pointer\"\n      onClick={() => {\n        history.push(`/detail/${props.data.id}`);\n      }}\n    >\n      <img\n        src={`https://codingapple1.github.io/shop/shoes${props.index + 1}.jpg`}\n        alt=\"\"\n        width=\"100%\"\n      />\n      <h4>{props.data.title}</h4>\n      <p>\n        {props.data.content} / {props.data.price}\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { combineReducers, createStore } from \"redux\";\n\n// 장바구니 > 알림\nconst alert기본값 = true;\nfunction reducer2(state = alert기본값, 액션) {\n  if (액션.type === false) {\n    state = false;\n    return state;\n  } else {\n    return state;\n  }\n}\n\n// 장바구니\nconst 기본값 = [];\n\nfunction reducer(state = 기본값, 액션) {\n  if (액션.type === \"상품추가\") {\n    // 검색\n    const find = state.findIndex((a) => {\n      return a.id === 액션.payload.id;\n    });\n\n    if (find >= 0) {\n      // 중복된 상품이 있는 경우 개수 추가\n      //\n      // 배열 Index 검색\n      const 복사본 = [...state];\n      function findApple(e) {\n        if (e.id === 액션.payload.id) return true;\n      }\n      const arrIndex = 복사본.findIndex(findApple);\n\n      복사본[arrIndex].quan++;\n\n      return 복사본;\n      // ---------------------------------\n    } else {\n      // 중복된 상품이 없는경우 항목 추가\n      const 복사본 = [...state];\n\n      복사본.push(액션.payload);\n\n      return 복사본;\n    }\n  } else if (액션.type === \"수량증가\") {\n    // 배열 Index 검색\n    const 복사본 = [...state];\n\n    function findApple(e) {\n      if (e.id === 액션.index) return true;\n    }\n    const arrIndex = 복사본.findIndex(findApple);\n\n    // 수량 증가\n    복사본[arrIndex].quan++;\n    return 복사본;\n    // ---------------------------------\n  } else if (액션.type === \"수량감소\") {\n    // 배열 Index 검색\n    const 복사본 = [...state];\n\n    function findApple(e) {\n      if (e.id === 액션.index) return true;\n    }\n    const arrIndex = 복사본.findIndex(findApple);\n\n    // 0보다 작은경우\n    if (복사본[arrIndex].quan <= 1) {\n      alert(\"최소 수량은 1 입니다!\");\n      return 복사본;\n    } else {\n      복사본[arrIndex].quan--;\n      return 복사본;\n    }\n  } else {\n    return state;\n  }\n}\n\nconst store = createStore(combineReducers({ reducer, reducer2 }));\n//const store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}