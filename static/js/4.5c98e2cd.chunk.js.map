{"version":3,"sources":["Detail.js"],"names":["Stock","props","재고","TabContent","useEffect","애니","탭상태","className","connect","state","useState","알림","알림변경","타이머","setTimeout","clearTimeout","id","useParams","찾은상품","shoes","find","상품","Number","history","useHistory","Box","styled","div","Title","h3","color","inpData","inpData변경","탭메뉴","탭메뉴변경","inProp","setInProp","type","onChange","e","target","value","src","width","alt","title","content","price","onClick","재고변경","dispatch","payload","name","quan","push","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","timeout","classNames"],"mappings":"qNAgJA,SAASA,EAAMC,GACb,OAAO,4BAAIA,EAAMC,aAAG,KAGtB,SAASC,EAAWF,GAKlB,OAJAG,qBAAU,WACRH,EAAMI,cAAG,MAGO,IAAdJ,EAAMK,mBACD,qBAAKC,UAAU,cAAf,2CACgB,IAAdN,EAAMK,mBACR,qBAAKC,UAAU,cAAf,2CACgB,IAAdN,EAAMK,mBACR,qBAAKC,UAAU,cAAf,gDADF,EAYMC,uBAPf,SAAsBC,GACpB,MAAO,KAMMD,EAjKf,SAAgBP,GAAQ,IAAD,EACJS,oBAAS,GADL,mBAChBC,EADgB,KACZC,EADY,KAGrBR,qBAAU,WACR,IAAMS,EAAMC,YAAW,WACrBF,GAAK,KACJ,KAGH,OAAO,WACLG,aAAaF,MAEd,IAZkB,IAcbG,EAAOC,cAAPD,GACFE,EAAOjB,EAAMkB,MAAMC,MAAK,SAACC,GAC7B,OAAOA,EAAGL,KAAOM,OAAON,MAEpBO,EAAUC,cAEVC,EAAMC,IAAOC,IAAV,kDAGHC,EAAQF,IAAOG,GAAV,6FAGA,SAAC5B,GAAD,OAAWA,EAAM6B,SA1BP,EA6BQpB,mBAAS,IA7BjB,mBA6BdqB,EA7Bc,KA6BLC,EA7BK,OA+BAtB,mBAAS,GA/BT,mBA+BduB,EA/Bc,KA+BTC,EA/BS,OAiCOxB,oBAAS,GAjChB,mBAiCdyB,EAjCc,KAiCNC,EAjCM,KAmCrB,OACE,sBAAK7B,UAAU,YAAf,UACE,uBACE8B,KAAK,OACLC,SAAU,SAACC,GACTP,EAAUO,EAAEC,OAAOC,UAGvB,8BAAMV,IAEN,eAACN,EAAD,WACE,cAACG,EAAD,CAAOE,MAAO,MAAd,qBACQ,IAAPnB,EACC,qBAAKJ,UAAU,YAAf,SACE,6FAEA,QAEN,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEmC,IAAG,mDACDpB,OAAON,GAAM,EADZ,QAGH2B,MAAM,OACNC,IAAI,OAGR,sBAAKrC,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBW,EAAK2B,QAC3B,4BAAI3B,EAAK4B,UACT,4BAAI5B,EAAK6B,QACT,cAAC/C,EAAD,CAAOE,eAAID,EAAMC,eACjB,wBACEK,UAAU,iBACVyC,QAAS,WACP/C,EAAMgD,yBAAK,CAAC,EAAG,GAAI,KAEnBhD,EAAMiD,SAAS,CACbb,KAAM,2BACNc,QAAS,CAAEnC,GAAIE,EAAKF,GAAIoC,KAAMlC,EAAK2B,MAAOQ,KAAM,KAElD9B,EAAQ+B,KAAK,UATjB,sCAcA,wBACE/C,UAAU,sBACVyC,QAAS,WACPzB,EAAQgC,UAHZ,4CAWJ,eAAC,IAAD,CAAKC,QAAQ,OAAOC,iBAAiB,SAASlD,UAAU,OAAxD,UACE,cAAC,IAAImD,KAAL,UACE,cAAC,IAAIC,KAAL,CACEC,SAAS,SACTZ,QAAS,WACPd,EAAM,GACNE,GAAU,IAJd,mCAUF,cAAC,IAAIsB,KAAL,UACE,cAAC,IAAIC,KAAL,CACEC,SAAS,SACTZ,QAAS,WACPd,EAAM,GACNE,GAAU,IAJd,mCAUF,cAAC,IAAIsB,KAAL,UACE,cAAC,IAAIC,KAAL,CACEC,SAAS,SACTZ,QAAS,WACPd,EAAM,GACNE,GAAU,IAJd,sCAYJ,cAAC,IAAD,CAAeyB,GAAI1B,EAAQ2B,QAAS,IAAKC,WAAW,UAApD,SACE,cAAC5D,EAAD,CAAYG,qBAAK2B,EAAK5B,eAAI+B","file":"static/js/4.5c98e2cd.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport styled from \"styled-components\";\r\nimport \"./detail.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Detail(props) {\r\n  let [알림, 알림변경] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const 타이머 = setTimeout(() => {\r\n      알림변경(false);\r\n    }, 3000);\r\n\r\n    // 페이지 벗어나게 되면\r\n    return () => {\r\n      clearTimeout(타이머);\r\n    };\r\n  }, []);\r\n\r\n  const { id } = useParams();\r\n  const 찾은상품 = props.shoes.find((상품) => {\r\n    return 상품.id === Number(id);\r\n  });\r\n  const history = useHistory();\r\n\r\n  const Box = styled.div`\r\n    padding: 20px;\r\n  `;\r\n  const Title = styled.h3`\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    color: ${(props) => props.color};\r\n  `;\r\n\r\n  const [inpData, inpData변경] = useState(\"\");\r\n\r\n  const [탭메뉴, 탭메뉴변경] = useState(0);\r\n\r\n  const [inProp, setInProp] = useState(false);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          inpData변경(e.target.value);\r\n        }}\r\n      />\r\n      <div>{inpData}</div>\r\n\r\n      <Box>\r\n        <Title color={\"red\"}>Detail</Title>\r\n        {알림 === true ? (\r\n          <div className=\"my-alert2\">\r\n            <p>상품 마감 임박입니다!!</p>\r\n          </div>\r\n        ) : null}\r\n      </Box>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img\r\n            src={`https://codingapple1.github.io/shop/shoes${\r\n              Number(id) + 1\r\n            }.jpg`}\r\n            width=\"100%\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n          <p>{찾은상품.content}</p>\r\n          <p>{찾은상품.price}</p>\r\n          <Stock 재고={props.재고}></Stock>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              props.재고변경([4, 10, 15]);\r\n              // 장바구니 추가\r\n              props.dispatch({\r\n                type: \"상품추가\",\r\n                payload: { id: 찾은상품.id, name: 찾은상품.title, quan: 1 },\r\n              });\r\n              history.push(\"/cart\");\r\n            }}\r\n          >\r\n            주문하기\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger ml10\"\r\n            onClick={() => {\r\n              history.goBack();\r\n            }}\r\n          >\r\n            뒤로가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Nav variant=\"tabs\" defaultActiveKey=\"link-0\" className=\"mt-5\">\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-0\"\r\n            onClick={() => {\r\n              탭메뉴변경(0);\r\n              setInProp(true);\r\n            }}\r\n          >\r\n            탭메뉴1\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-1\"\r\n            onClick={() => {\r\n              탭메뉴변경(1);\r\n              setInProp(true);\r\n            }}\r\n          >\r\n            탭메뉴2\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-2\"\r\n            onClick={() => {\r\n              탭메뉴변경(2);\r\n              setInProp(true);\r\n            }}\r\n          >\r\n            탭메뉴3\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\r\n        <TabContent 탭상태={탭메뉴} 애니={setInProp} />\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Stock(props) {\r\n  return <p>{props.재고[0]}</p>;\r\n}\r\n\r\nfunction TabContent(props) {\r\n  useEffect(() => {\r\n    props.애니(false);\r\n  });\r\n\r\n  if (props.탭상태 === 0) {\r\n    return <div className=\"tab-content\">탭콘텐츠 0000</div>;\r\n  } else if (props.탭상태 === 1) {\r\n    return <div className=\"tab-content\">탭콘텐츠 1111</div>;\r\n  } else if (props.탭상태 === 2) {\r\n    return <div className=\"tab-content\">탭콘텐츠 2222</div>;\r\n  }\r\n}\r\n\r\nfunction state를props화(state) {\r\n  return {\r\n    //state: state.reducer,\r\n    //alertState: state.reducer2,\r\n  };\r\n}\r\n\r\nexport default connect(state를props화)(Detail);\r\n//export default Detail;\r\n"],"sourceRoot":""}